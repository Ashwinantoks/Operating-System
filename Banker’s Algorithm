// Bankerâ€™s Algorithm 

#include<stdio.h>
int main(){
int n,r,c=0,f=0,exec=0,k=0;
printf("Enter the number of processes:");
scanf("%d",&n);
printf("Enter the number of resources:");
scanf("%d",&r);
int avail[r],alloc[n][r],max[n][r],need[n][r],vis[n],a[n];
for(int i=0;i<n;i++){vis[i]=0;}
printf("Enter the available resources:");
for(int i=0;i<r;i++){scanf("%d",&avail[i]);}
for(int i=0;i<n;i++){
printf("Enter the allocation for process P%d:",i);
for(int j=0;j<r;j++){scanf("%d",&alloc[i][j]);}
printf("Enter the maximum resources for process P%d:",i);
for(int j=0;j<r;j++){scanf("%d",&max[i][j]);}
for(int j=0;j<r;j++){need[i][j]=max[i][j]-alloc[i][j];}
}
printf("\nAllocation\tMax\t\tNeed\n");
for(int i=0;i<n;i++){
for(int j=0;j<r;j++){printf("%d ",alloc[i][j]);}
printf("\t");
for(int j=0;j<r;j++){printf("%d ",max[i][j]);}
printf("\t");
for(int j=0;j<r;j++){printf("%d ",need[i][j]);}
printf("\n");
}
while(c<n){
f=0;
for(int i=0;i<n;i++){
exec=0;
for(int j=0;j<r;j++){
if(need[i][j]<=avail[j]){exec++;}
}
if(exec==r&&vis[i]==0){
for(int j=0;j<r;j++){avail[j]+=alloc[i][j];}
f=1; vis[i]=1; c++; a[k++]=i;
}
}
if(f==0){
printf("No safe sequence present..!!\n");
return 0;
}
}
printf("\nSafe sequence:\n");
for(int j=0;j<n;j++){printf("P%d\t",a[j]);}
printf("\n");
return 0;
}
